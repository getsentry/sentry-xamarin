name: build
on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
      - release/*

  pull_request:
jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13]
    steps:
      - uses: actions/checkout@v4
      - uses: microsoft/setup-msbuild@v1.1
        if: startsWith(matrix.os, 'windows')
        # By default, the latest Windows machine doesn't come with the 16299 SDK installed,
        # which is required for building the UWP platform.
      - name: Install Windows SDK Version 10.0.16299.0
        run:
            pwsh ./scripts/install-win-sdk.ps1 16299
        if: startsWith(matrix.os, 'windows')
      - name: Setup Java SDK

        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@07976c6290703d34c16d382cb36445f98bb43b1f # v3.2.0
        with:
          packages: 'platforms;android-30'
      - name: Setup Xamarin MacOS SDK
        if: startsWith(matrix.os, 'macos')
        run: brew install --cask xamarin-mac
      - name: Setup Xamarin Android SDK
        if: startsWith(matrix.os, 'macos')
        run: brew install --cask xamarin-android
      - name: Setup Xamarin iOS SDK
        if: startsWith(matrix.os, 'macos')
        run: brew install --cask xamarin-ios

      - run: msbuild Sentry.Xamarin.sln -p:Configuration=Release -t:restore

      - name: Restore X64
        if: startsWith(matrix.os, 'windows')
        run: msbuild Sentry.Xamarin.sln -p:Configuration=Release /p:Platform=x64

      - name: Build Solution with MSBuild
        run: msbuild Sentry.Xamarin.sln -p:Configuration=Release

      - name: Restore iOS Sample app NuGet
        run: msbuild Samples/Sample.Xamarin.iOS/Sample.Xamarin.iOS.csproj -p:Configuration=Release -t:restore
        if: startsWith(matrix.os, 'macos')
      - name: Build iOS Sample app
        run: msbuild Samples/Sample.Xamarin.iOS/Sample.Xamarin.iOS.csproj -p:Configuration=Release
        if: startsWith(matrix.os, 'macos')
      - name: Build Android Sample app
        run: msbuild Samples/Sample.Xamarin.Droid/Sample.Xamarin.Droid.csproj -p:Configuration=Release
        if: startsWith(matrix.os, 'windows')
      - name: Build UWP Sample app
        run: msbuild Samples/Sample.Xamarin.UWP/Sample.Xamarin.UWP.csproj /p:Platform=x64 /p:Configuration=Release
        if: startsWith(matrix.os, 'windows')
      - name: Build UWP Test Project
        run: msbuild Tests/Sentry.Xamarin.Forms.UWP.Tests/Sentry.Xamarin.Forms.UWP.Tests.csproj /p:Platform=x64 /p:Configuration=Release
        if: startsWith(matrix.os, 'windows')
      - name: Setup VS Test
        uses: darenm/Setup-VSTest@v1
        if: startsWith(matrix.os, 'windows')
      - name: Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: |
            ${{ github.workspace }}/src/**/Release/*.nupkg
